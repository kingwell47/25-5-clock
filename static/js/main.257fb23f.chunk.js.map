{"version":3,"sources":["components/Display.jsx","icons/foolhat.svg","components/Timer.jsx","audio/break.wav","audio/work.wav","audio/card.mp3","App.jsx","index.jsx"],"names":["Display","props","countingDown","counting","className","id","onClick","currTime","time","handler","addTime","fill","d","reduceTime","Timer","useState","totalTime","setTotalTime","setCountingDown","timerMinutes","useRef","timerSeconds","alert","switching","resetTimer","resetBtn","refresh","audio","document","getElementById","pause","load","pauseAudio","current","useEffect","minutes","interval","setInterval","play","doIntervalChange","switchOver","clearInterval","Math","floor","seconds","src","jester","alt","initial","App","breakTime","setBreakTime","sessionTime","setSessionTime","sessionActive","setSessionActive","takeBreak","Audio","takeABreak","backWork","backToWork","cardDraw","href","rel","target","ReactDOM","render"],"mappings":"mMAqEeA,MAnEf,SAAiBC,GACf,IAAMC,EAAeD,EAAME,SA4B3B,OACE,0BAASC,UAAWH,EAAMI,GAA1B,UACE,yBACED,UAAU,aACVC,GAAIJ,EAAMI,GAAK,aACfC,QAAS,kBA/BC,WACd,IAAIJ,EAAJ,CAIA,IAAIK,EAAWN,EAAMO,KACjBD,EAAW,IACbN,EAAMQ,QAAQF,EAAW,IAwBRG,IAHjB,cAKE,8BACE,sBACEC,KAAK,kBACLC,EAAE,8TAIR,sBAAKR,UAAU,eAAf,UACE,mBAAGA,UAAU,OAAOC,GAAIJ,EAAMI,GAAK,UAAnC,SACGJ,EAAMO,OAET,qBAAIJ,UAAU,SAASC,GAAIJ,EAAMI,GAAK,SAAtC,UACGJ,EAAMI,GADT,gBAIF,yBACED,UAAU,gBACVC,GAAIJ,EAAMI,GAAK,aACfC,QAAS,kBAtCI,WAEjB,IAAIJ,EAAJ,CAGA,IAAIK,EAAWN,EAAMO,KACjBD,EAAW,GACbN,EAAMQ,QAAQF,EAAW,IA+BRM,IAHjB,UAIE,8BACE,sBACEF,KAAK,kBACLC,EAAE,2TAPR,WCrDS,MAA0B,oCCkJ1BE,MAjIf,SAAeb,GACb,MAAkCc,mBAAsB,GAAbd,EAAMO,MAAjD,mBAAOQ,EAAP,KAAkBC,EAAlB,KAGA,EAA0ChB,EAAME,SAAxCD,EAAR,EAAQA,aAAcgB,EAAtB,EAAsBA,gBAChBC,EAAeC,iBAAOnB,EAAMO,MAC5Ba,EAAeD,iBAAO,MACtBE,EAAQF,kBAAO,GACfG,EAAYH,kBAAO,GAmBnBI,EAAa,WAEjBvB,EAAMwB,WACNC,IAhBiB,WACjB,IAAIC,EAAQC,SAASC,eAAe,QACpCF,EAAMG,QACNH,EAAMI,OAcNC,GACAV,EAAMW,SAAU,GAIlBC,qBAAU,WACR,IAAIC,EAAUlC,EAAMO,KACpB2B,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzClB,EAA0B,GAAbhB,EAAMO,MACnBW,EAAac,QAAUE,EACvBd,EAAaY,QAAU,OACtB,CAAChC,EAAMO,OAGV0B,qBAAU,WACR,IAAIE,EAAWC,aAAY,WACI,OAAzBlB,EAAac,QACfX,EAAMW,SAAU,EAEhBX,EAAMW,SAAU,EAEb/B,IAGDc,GAAa,GA5CPY,SAASC,eAAe,QAC9BS,OA8CApC,GAAgBc,GAAa,EAE/BuB,KAEAhB,EAAUU,SAAU,EACpBhC,EAAMuC,aACNd,IACAW,aAAY,WACVd,EAAUU,SAAU,IACnB,UAEJ,KACH,OAAO,kBAAMQ,cAAcL,OAI7B,IAAMV,EAAU,WACdT,EAA0B,GAAbhB,EAAMO,MACnB,IAAI2B,EAAUlC,EAAMO,KACpB2B,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzChB,EAAac,QAAUE,EACvBd,EAAaY,QAAU,MAInBM,EAAmB,WACvB,IAAIJ,EAAUO,KAAKC,MAAM3B,EAAY,IACjC4B,EAAU5B,EAAY,GAC1B4B,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzCT,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzChB,EAAac,QAAUE,EACvBd,EAAaY,QAAUW,EACvB3B,EAAaD,EAAY,IAG3B,OACE,0BAASZ,UAAWH,EAAMI,GAAK,SAA/B,UACE,yBACED,UAAWF,EAAe,oBAAsB,aAChDG,GAAG,aACHC,QAAS,kBA7ETU,IAA2B,GAAbf,EAAMO,MACtBS,EAAaD,EAAY,QAE3BE,GAAiBhB,IAuEf,cAKE,8BACE,sBACEU,EAAE,6KACFD,KAAK,iBAIX,sBAAKP,UAAWkB,EAAMW,QAAU,qBAAuB,eAAvD,UACGV,EAAUU,SAAW,qBAAKY,IAAKC,EAAQC,IAAI,KAC5C,oBAAG3C,UAAU,OAAOC,GAAG,YAAvB,UACGc,EAAac,QADhB,IAC0BZ,EAAaY,WAEvC,oBAAI7B,UAAU,SAASC,GAAG,cAA1B,SACGJ,EAAMI,QAGX,yBAAQD,UAAU,gBAAgBC,GAAG,QAAQC,QAAS,kBAAMkB,KAA5D,UACE,8BACE,sBACEZ,EAAE,6KACFD,KAAK,cAJX,WCrIS,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,iCCQnCqC,EACO,EADPA,EAES,GAgFAC,MA7Ef,WACE,MAAkClC,mBAASiC,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAsCpC,mBAASiC,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAA0CtC,oBAAS,GAAnD,mBAAOuC,EAAP,KAAsBC,EAAtB,KACA,EAAwCxC,oBAAS,GAAjD,mBAAOb,EAAP,KAAqBgB,EAArB,KAEMsC,EAAY,IAAIC,MAAMC,GACtBC,EAAW,IAAIF,MAAMG,GAqB3B,OACE,sBAAKxD,UAAU,MAAf,UACE,8CACA,uBAAOyC,IAAKgB,EAAUxD,GAAG,SACzB,sBAAKD,UAAU,kBAAf,UACE,cAAC,EAAD,CACEC,GAAG,UACHG,KAAM4C,EACN3C,QAAS4C,EACTlD,SAAUD,IAEZ,cAAC,EAAD,CACEG,GAAIiD,EAAgB,UAAY,QAChC9C,KAAM8C,EAAgBF,EAAcF,EACpC/C,SAAU,CAAED,eAAcgB,mBAC1BO,SAvBY,WAElB0B,EAAaH,GACbK,EAAeL,GACfO,GAAiB,GACjBrC,GAAgB,IAmBVsB,WAnCiB,WAEnBc,EAEFE,EAAUlB,OAEVqB,EAASrB,OAEXiB,GAAkBD,MA6Bd,cAAC,EAAD,CACEjD,GAAG,QACHG,KAAM0C,EACNzC,QAAS0C,EACThD,SAAUD,OAGd,sBAAKE,UAAU,OAAf,UACE,8BACE,oBACE0D,KAAK,2CACLC,IAAI,aACJC,OAAO,SAHT,kBAIQ,OALV,KAOK,IACH,mBAAGF,KAAK,6BAA6BC,IAAI,aAAaC,OAAO,SAA7D,+BAIF,qDACuB,IACrB,mBAAGF,KAAK,sBAAsBC,IAAI,aAAaC,OAAO,SAAtD,mCC5EVC,IAASC,OACP,qBAAK9D,UAAU,OAAf,SACE,cAAC,EAAD,MAEFwB,SAASC,eAAe,U","file":"static/js/main.257fb23f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Display(props) {\r\n  const countingDown = props.counting;\r\n\r\n  const addTime = () => {\r\n    if (countingDown) {\r\n      //If currently countingdown, do nothing\r\n      return;\r\n    }\r\n    let currTime = props.time;\r\n    if (currTime < 60) {\r\n      props.handler(currTime + 1); //increment the time prop passed down from the parent component\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const reduceTime = () => {\r\n    //If currently countingdown, do nothing\r\n    if (countingDown) {\r\n      return;\r\n    }\r\n    let currTime = props.time;\r\n    if (currTime > 1) {\r\n      props.handler(currTime - 1);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={props.id}>\r\n      <button\r\n        className='button-top'\r\n        id={props.id + \"-increment\"}\r\n        onClick={() => addTime()}>\r\n        A\r\n        <svg>\r\n          <path\r\n            fill='rgb(36, 10, 14)'\r\n            d='m9.9958 40c7.2112-1.603 7.9872-5.826 8.5312-13.594-1.253 2.075-3.531 3.607-7.25 3.594-6.1124-0.021-10.207-3.576-8.75-11.25 1.4688-7.737 12.469-10.737 17.469-18.75 5 8.0128 16 11.013 17.469 18.75 1.456 7.674-2.469 11.228-8.75 11.25-3.719 0.013-5.997-1.519-7.25-3.594 0.544 7.768 1.319 11.991 8.531 13.594h-20z'\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div className='text-wrapper'>\r\n        <p className='text' id={props.id + \"-length\"}>\r\n          {props.time}\r\n        </p>\r\n        <h2 className='header' id={props.id + \"-label\"}>\r\n          {props.id} length\r\n        </h2>\r\n      </div>\r\n      <button\r\n        className='button-bottom'\r\n        id={props.id + \"-decrement\"}\r\n        onClick={() => reduceTime()}>\r\n        <svg>\r\n          <path\r\n            fill='rgb(36, 10, 14)'\r\n            d='m9.9958 40c7.2112-1.603 7.9872-5.826 8.5312-13.594-1.253 2.075-3.531 3.607-7.25 3.594-6.1124-0.021-10.207-3.576-8.75-11.25 1.4688-7.737 12.469-10.737 17.469-18.75 5 8.0128 16 11.013 17.469 18.75 1.456 7.674-2.469 11.228-8.75 11.25-3.719 0.013-5.997-1.519-7.25-3.594 0.544 7.768 1.319 11.991 8.531 13.594h-20z'\r\n          />\r\n        </svg>\r\n        S\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","export default __webpack_public_path__ + \"static/media/foolhat.258cd066.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport jester from \"../icons/foolhat.svg\";\r\n\r\n/* \r\n\r\nAdapted from Florin Pop's countdown timer\r\nhttps://www.youtube.com/watch?v=x7WJEmxNlEs\r\n\r\nand\r\nUzoanya Dominic's Countdown Timer\r\nhttps://www.youtube.com/watch?v=ZVOGPvo08zM\r\n\r\nand\r\nCoding Entrepreneurs\r\nhttps://www.youtube.com/watch?v=NAx76xx40jM\r\n*/\r\n\r\nfunction Timer(props) {\r\n  const [totalTime, setTotalTime] = useState(props.time * 60);\r\n  // const [timerMinutes, setTimerMinutes] = useState(props.time);\r\n  // const [timerSeconds, setTimerSeconds] = useState(\"00\");\r\n  const { countingDown, setCountingDown } = props.counting;\r\n  const timerMinutes = useRef(props.time);\r\n  const timerSeconds = useRef(\"00\");\r\n  const alert = useRef(false);\r\n  const switching = useRef(false);\r\n\r\n  const playAudio = () => {\r\n    let audio = document.getElementById(\"beep\");\r\n    audio.play();\r\n  };\r\n  const pauseAudio = () => {\r\n    let audio = document.getElementById(\"beep\");\r\n    audio.pause();\r\n    audio.load();\r\n  };\r\n\r\n  const handleStart = () => {\r\n    if (totalTime === props.time * 60) {\r\n      setTotalTime(totalTime - 1); //Immediately decrement the count at start!\r\n    }\r\n    setCountingDown(!countingDown); //Toggle the countdown\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    //handle resetting everything\r\n    props.resetBtn();\r\n    refresh(); //update the timer to latest time;\r\n    pauseAudio();\r\n    alert.current = false;\r\n  };\r\n\r\n  // Update the timer every time prop.time is changed\r\n  useEffect(() => {\r\n    let minutes = props.time;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    setTotalTime(props.time * 60);\r\n    timerMinutes.current = minutes;\r\n    timerSeconds.current = \"00\";\r\n  }, [props.time]);\r\n\r\n  // UseEffect to do updates\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      if (timerMinutes.current === \"00\") {\r\n        alert.current = true;\r\n      } else {\r\n        alert.current = false;\r\n      }\r\n      if (!countingDown) {\r\n        return; // If the timer is not active, do nothing\r\n      }\r\n      if (totalTime <= 0) {\r\n        playAudio(); // Play Audio when time is up\r\n      }\r\n      if (countingDown && totalTime >= 0) {\r\n        //Countdown only until zero\r\n        doIntervalChange();\r\n      } else {\r\n        switching.current = true;\r\n        props.switchOver(); //Switchover to the other timer\r\n        refresh(); // update the timer again\r\n        setInterval(() => {\r\n          switching.current = false;\r\n        }, 4500);\r\n      }\r\n    }, 1000); // 1 second intervals\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  //The function below \"refreshes\" the display time\r\n  const refresh = () => {\r\n    setTotalTime(props.time * 60);\r\n    let minutes = props.time;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    timerMinutes.current = minutes;\r\n    timerSeconds.current = \"00\";\r\n  };\r\n\r\n  //This is the actual counting down function\r\n  const doIntervalChange = () => {\r\n    let minutes = Math.floor(totalTime / 60);\r\n    let seconds = totalTime % 60;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds; //Formatting the seconds and minutes\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    timerMinutes.current = minutes;\r\n    timerSeconds.current = seconds;\r\n    setTotalTime(totalTime - 1);\r\n  };\r\n\r\n  return (\r\n    <section className={props.id + \"-timer\"}>\r\n      <button\r\n        className={countingDown ? \"button-top active\" : \"button-top\"}\r\n        id='start_stop'\r\n        onClick={() => handleStart()}>\r\n        P\r\n        <svg>\r\n          <path\r\n            d='m20 10c0.97-5 2.911-10 9.702-10 6.792 0 12.128 5 9.703 15-2.426 10-13.584 15-19.405 25-5.821-10-16.979-15-19.405-25-2.4254-10 2.9109-15 9.703-15 6.791 0 8.732 5 9.702 10z'\r\n            fill='#A5031E'\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div className={alert.current ? \"text-wrapper alert\" : \"text-wrapper\"}>\r\n        {switching.current && <img src={jester} alt='' />}\r\n        <p className='text' id='time-left'>\r\n          {timerMinutes.current}:{timerSeconds.current}\r\n        </p>\r\n        <h2 className='header' id='timer-label'>\r\n          {props.id}\r\n        </h2>\r\n      </div>\r\n      <button className='button-bottom' id='reset' onClick={() => resetTimer()}>\r\n        <svg>\r\n          <path\r\n            d='m20 10c0.97-5 2.911-10 9.702-10 6.792 0 12.128 5 9.703 15-2.426 10-13.584 15-19.405 25-5.821-10-16.979-15-19.405-25-2.4254-10 2.9109-15 9.703-15 6.791 0 8.732 5 9.702 10z'\r\n            fill='#A5031E'\r\n          />\r\n        </svg>\r\n        R\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","export default __webpack_public_path__ + \"static/media/break.9d47a231.wav\";","export default __webpack_public_path__ + \"static/media/work.f02b1e96.wav\";","export default __webpack_public_path__ + \"static/media/card.e1bf857a.mp3\";","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport Display from \"./components/Display\";\r\nimport Timer from \"./components/Timer\";\r\nimport takeABreak from \"./audio/break.wav\";\r\nimport backToWork from \"./audio/work.wav\";\r\nimport cardDraw from \"./audio/card.mp3\";\r\n\r\nconst initial = {\r\n  breakTime: 5,\r\n  sessionTime: 25,\r\n};\r\n\r\nfunction App() {\r\n  const [breakTime, setBreakTime] = useState(initial.breakTime);\r\n  const [sessionTime, setSessionTime] = useState(initial.sessionTime);\r\n  const [sessionActive, setSessionActive] = useState(true);\r\n  const [countingDown, setCountingDown] = useState(false);\r\n\r\n  const takeBreak = new Audio(takeABreak);\r\n  const backWork = new Audio(backToWork);\r\n\r\n  const handleSwitchOver = () => {\r\n    //Handle Switching over to another timer\r\n    if (sessionActive) {\r\n      //Play Audio depending on what's active\r\n      takeBreak.play();\r\n    } else {\r\n      backWork.play();\r\n    }\r\n    setSessionActive(!sessionActive); //Toggle Session active\r\n  };\r\n\r\n  const handleReset = () => {\r\n    //Reset the timer back to initial 25 + 5 Settings\r\n    setBreakTime(initial.breakTime);\r\n    setSessionTime(initial.sessionTime);\r\n    setSessionActive(true);\r\n    setCountingDown(false);\r\n  };\r\n\r\n  return (\r\n    <div className='app'>\r\n      <h1>25 + 5 Clock</h1>\r\n      <audio src={cardDraw} id='beep'></audio>\r\n      <div className='display_wrapper'>\r\n        <Display\r\n          id='session'\r\n          time={sessionTime}\r\n          handler={setSessionTime}\r\n          counting={countingDown} // Pass down status if counting down or not\r\n        />\r\n        <Timer //Switch Items Depending on if session is active\r\n          id={sessionActive ? \"session\" : \"break\"}\r\n          time={sessionActive ? sessionTime : breakTime}\r\n          counting={{ countingDown, setCountingDown }} // Pass down status if counting down or not, passing down the setter also allows the timer to change the status\r\n          resetBtn={handleReset}\r\n          switchOver={handleSwitchOver}\r\n        />\r\n        <Display\r\n          id='break'\r\n          time={breakTime}\r\n          handler={setBreakTime}\r\n          counting={countingDown} // Pass down status if counting down or not\r\n        />\r\n      </div>\r\n      <div className='foot'>\r\n        <p>\r\n          <a\r\n            href='https://github.com/kingwell47/25-5-clock'\r\n            rel='noreferrer'\r\n            target='_blank'>\r\n            Coded{\" \"}\r\n          </a>\r\n          by{\" \"}\r\n          <a href='https://www.kingwell47.com' rel='noreferrer' target='_blank'>\r\n            Joel P. Doctor\r\n          </a>\r\n        </p>\r\n        <p>\r\n          Voice Synthesis from{\" \"}\r\n          <a href='https://uberduck.ai' rel='noreferrer' target='_blank'>\r\n            Uberduck.ai\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <div className='main'>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}